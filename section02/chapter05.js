// 원시타입 VS 객체타입

// 데이터 타입
// 원시타입 => 그냥 변수들
// 객체 타입 => 배열, 함수, 객체 이런거

// 원시 타입 => 메모리 공간의 원본 데이터 값은 안바뀜. => 불변값
// 객체 타입 => 참조값을 통해 저장 => 메모리상의 원본값 바뀜 => 가변값

// 원시 타입은 괜찮은데... 객체 타입 다룰때 주의를 해야된다.

//1. 의도치 않게 값이 수정될 수 있다.
// side effect라고도 함.

let o2;
let o1 = o2; // 깊은 복사: 이런식으로 하면 참조값 겹쳐서 o2 바꼈을때 o1도 바뀔수있음 => 대참사

o1 = {...o2}; // 얕은 복사: 스프레드 연산자로 요런식으로 값을 통째로 복사해오는 방식으로 가져오자. => 안전.

// 객체 값의 비교는 기본적으로 참조값으로 이루어짐
// 값이 같아도 주소값이 다르면 == 비교ㅕ시 다르게 나옴

JSON.stringify(o1) === JSON.stringify(o2); // 이 내장함수로 비교해야 객체 안에 프로퍼티 값이 같은지 비교가능.

// etc) 배열와 함수도 사실 객체다 !