NODE.js

React.js 는 Node.js를 기반으로 동작하기 때문. => 그래서 리엑트를 이해하려면 노드도 알아야됨

노드js => 웹 브라우저 아닌 환경에서도 자바스크립트가 실행되게하는 실행환경(Run Time) => 구동기

원래 자바스크립트 => 웹용 => 생산성 good 간편 good => 웹 밖에서도 쓰고싶다! 
=> 그 바램 이루어짐 => 2009년 노드js의 등장 => 이제는 자바스크립트를 어디서든 쓸수있는 범용성을 가지게됨.
=> 자바스크립트로 웹 말고도 뭐든 만들수있게 됨.

LTS => Long Term Support => 장기적으로 안정적으로 지원되는 버전

NPM => NODE Package Manager 

패키지 => Node.js에서 사용하는 프로그램의 단위 => 프로젝트를 패키지라고 부름.

------

Vs CODE 내에서 => cmd + j => 터미널 열림 => 기본적으로 열려있는 폴더를 기준으로 동작됨

Npm init => 해서 nodejs 폴더로 만들어주기

이제 이렇게 되면 => html이랑 웹 개발자 도구 안쓰고 js 코드 실행가능

zsh 터미널에서 => node @@@파일명.js => 이러면 실행됨 

폴더 안에 있을시 => node 폴더명/파일명.js

=> 나중에 파일 너무 많아진다.. => package.json => scripts 밑에 "start": "node 폴더명/파일명.js"
=> 이러면 터미널에서 => npm run start 쓰면 바로 동작 => start 말고 딴것도 가능.


-------- Node js 모듈 시스템 이해하기

모듈 시스템 => 모듈 다루는 시스템

기능 === 모듈 => 파편화

// ES Module 시스템 사용 => 먼저 package.json 에서 license 밑에 "type": "module" 넣기 
// => 이게 내가 이 03 섹션에서는 ES 모듈 시스템을 사용하겠다는 뜻임.
// ES module scope, you can use import instead => 이런 오류 뜬다? => 이러면 내가 모듈시스템을 헷갈리지 않았나 생각





